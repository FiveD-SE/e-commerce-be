services:
  product-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: product-service-prod
    ports:
      - "${PRODUCT_SERVICE_PORT:-8501}:${SERVER_PORT:-8501}"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=${SERVER_PORT:-8501}
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/product_service?createDatabaseIfNotExist=true&characterEncoding=UTF-8&useUnicode=true&allowMultiQueries=true&useSSL=true&requireSSL=false&verifyServerCertificate=false
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_FLYWAY_ENABLED=true
      - EUREKA_CLIENT_ENABLED=${EUREKA_CLIENT_ENABLED:-true}
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:-http://eureka-server:8761/eureka/}
      - SPRING_ZIPKIN_BASE_URL=${SPRING_ZIPKIN_BASE_URL:-http://zipkin:9411/}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - JAVA_OPTS=-Xmx1024m -Xms512m -XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -XX:G1HeapRegionSize=16m -XX:+UseStringDeduplication
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - product-service-prod-data:/app/data
    networks:
      - e-commerce-prod-network
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:${SERVER_PORT:-8501}/product-service/actuator/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 90s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1.5G
          cpus: "1.0"
        reservations:
          memory: 512M
          cpus: "0.5"

  mysql:
    image: mysql:8.0
    container_name: product-service-mysql-prod
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    command: >
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO
      --max_connections=500
      --innodb_buffer_pool_size=512M
      --innodb_log_file_size=256M
      --innodb_flush_log_at_trx_commit=2
      --innodb_file_per_table=1
      --query_cache_type=1
      --query_cache_size=64M
      --slow_query_log=1
      --long_query_time=2
    volumes:
      - mysql-prod-data:/var/lib/mysql
      - ./backup:/backup
      - ./config/mysql:/etc/mysql/conf.d
    networks:
      - e-commerce-prod-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 20
      start_period: 60s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.8"
        reservations:
          memory: 512M
          cpus: "0.3"

  redis:
    image: redis:7-alpine
    container_name: product-service-redis-prod
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: >
      redis-server 
      --appendonly yes 
      --requirepass ${REDIS_PASSWORD}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300
    volumes:
      - redis-prod-data:/data
      - ./config/redis:/usr/local/etc/redis
    networks:
      - e-commerce-prod-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"
        reservations:
          memory: 128M
          cpus: "0.1"

  zipkin:
    image: openzipkin/zipkin
    container_name: product-service-zipkin-prod
    ports:
      - "${ZIPKIN_PORT:-9411}:9411"
    environment:
      - STORAGE_TYPE=mysql
      - MYSQL_HOST=mysql
      - MYSQL_DB=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASSWORD}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - e-commerce-prod-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.5"

networks:
  e-commerce-prod-network:
    driver: bridge
    name: e-commerce-prod-network

volumes:
  mysql-prod-data:
    driver: local
  redis-prod-data:
    driver: local
  product-service-prod-data:
    driver: local
